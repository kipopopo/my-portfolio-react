{"version":3,"sources":["logo.png","components/Nav.js","assets/icons/light-mode.svg","assets/icons/dark-mode.svg","components/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["menuItems","name","Nav","props","style","transform","togglePosition","styleNav","boxShadow","color","className","onClick","handleToggle","src","Logo","alt","map","menuItem","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgLightMode","_ref","svgRef","title","titleId","xmlns","width","height","viewBox","ref","id","ForwardRef","SvgDarkMode","MainContent","toggleNav","styleToggleDark","backgroundColor","bgColor","top","styleToggleDarkBtn","toggleDark","fill","App","useState","setToggleNav","setTogglePosition","setToggleDark","setBgColor","setColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a12ea5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.94715f34.png\";","import React from \"react\";\r\nimport \"../styles/main.scss\";\r\nimport Logo from \"../logo.png\";\r\n\r\nconst menuItems = [{ name: \"About\" }, { name: \"Contact\" }];\r\n\r\nfunction Nav(props) {\r\n  let translateY = `translate(0px, ${props.togglePosition})`;\r\n  let style = {\r\n    transform: translateY,\r\n  };\r\n  let boxShadow = `0 0.35rem ${props.color}`;\r\n  let styleNav = {\r\n    boxShadow: boxShadow,\r\n  };\r\n\r\n  return (\r\n    <div className=\"component-nav\" style={style}>\r\n      <nav style={styleNav}>\r\n        <div\r\n          className=\"nav-toggle btn-pointer\"\r\n          onClick={props.handleToggle}\r\n          style={styleNav}\r\n        >\r\n          <span>^</span>\r\n        </div>\r\n        <div className=\"logo-img\">\r\n          <img src={Logo} alt=\"logo\" />\r\n        </div>\r\n        <ul className=\"nav-links\">\r\n          {menuItems.map((menuItem) => (\r\n            <div className=\"btn-pointer\">\r\n              <li>{menuItem.name}</li>\r\n            </div>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default Nav;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.088 13.126l1.912-1.126-1.912-1.126c-1.021-.602-1.372-1.91-.788-2.942l1.093-1.932-2.22-.02c-1.185-.01-2.143-.968-2.153-2.153l-.02-2.219-1.932 1.093c-1.031.583-2.34.233-2.941-.788l-1.127-1.913-1.127 1.913c-.602 1.021-1.91 1.372-2.941.788l-1.932-1.093-.02 2.219c-.01 1.185-.968 2.143-2.153 2.153l-2.22.02 1.093 1.932c.584 1.032.233 2.34-.788 2.942l-1.912 1.126 1.912 1.126c1.021.602 1.372 1.91.788 2.942l-1.093 1.932 2.22.02c1.185.01 2.143.968 2.153 2.153l.02 2.219 1.932-1.093c1.031-.583 2.34-.233 2.941.788l1.127 1.913 1.127-1.913c.602-1.021 1.91-1.372 2.941-.788l1.932 1.093.02-2.219c.011-1.185.969-2.143 2.153-2.153l2.22-.02-1.093-1.932c-.584-1.031-.234-2.34.788-2.942zm-10.117 6.874c-4.411 0-8-3.589-8-8s3.588-8 8-8 8 3.589 8 8-3.589 8-8 8zm.029-2c-3.313 0-6-2.687-6-6s2.687-6 6-6v12z\"\n});\n\nfunction SvgLightMode(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLightMode);\nexport default __webpack_public_path__ + \"static/media/light-mode.b14e36c3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10v-20zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12z\"\n});\n\nfunction SvgDarkMode(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDarkMode);\nexport default __webpack_public_path__ + \"static/media/dark-mode.31129325.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport \"../styles/main.scss\";\r\nimport { ReactComponent as LightIcon } from \"../assets/icons/light-mode.svg\";\r\nimport { ReactComponent as DarkIcon } from \"../assets/icons/dark-mode.svg\";\r\n\r\nfunction MainContent(props) {\r\n  let height;\r\n  if (props.toggleNav) {\r\n    height = \"90vh\";\r\n  } else {\r\n    height = \"99%\";\r\n  }\r\n\r\n  let styleToggleDark = {\r\n    backgroundColor: props.bgColor,\r\n    color: props.color,\r\n    top: props.togglePosition,\r\n    height: height,\r\n  };\r\n  let styleToggleDarkBtn = {\r\n    backgroundColor: props.bgColor,\r\n    color: props.color,\r\n    top: props.togglePosition,\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\" style={styleToggleDark}>\r\n      <div className=\"main-content\">\r\n        <p>\r\n          MAIN CONTAINER <br /> background-color: {props.bgColor} <br /> color:{\" \"}\r\n          {props.color} <br />\r\n          toggle-dark: {props.toggleDark ? \"true\" : \"false\"}\r\n        </p>\r\n      </div>\r\n      <button className=\"ld-mode btn-pointer\" onClick={props.handleToggle}>\r\n        <div className=\"icon\">\r\n          {props.toggleDark ? (\r\n            <LightIcon fill={props.color} width=\"2rem\" height=\"2rem\" />\r\n          ) : (\r\n            <DarkIcon fill={props.color} width=\"1.5rem\" height=\"2rem\" />\r\n          )}\r\n        </div>\r\n        <div className=\"text\" style={styleToggleDarkBtn}>\r\n          <p>{props.toggleDark ? \"Light up!\" : \"Light off!\"}</p>\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default MainContent;\r\n","import React, { useState } from \"react\";\nimport Nav from \"./components/Nav\";\nimport MainContent from \"./components/MainContent\";\n\nimport \"./styles/main.scss\";\nimport \"./styles/font.css\";\n\nfunction App() {\n  const [toggleNav, setToggleNav] = useState(true);\n  const [togglePosition, setTogglePosition] = useState(\"0px\");\n  const handleToggle = () => {\n    if (toggleNav) {\n      setTogglePosition(\"-9.475vh\");\n    } else {\n      setTogglePosition(\"0px\");\n    }\n    setToggleNav(!toggleNav);\n  };\n\n  const [toggleDark, setToggleDark] = useState(true);\n  const [bgColor, setBgColor] = useState(\"#111111\");\n  const [color, setColor] = useState(\"whitesmoke\");\n  const handleToggleMainContent = () => {\n    setToggleDark(!toggleDark);\n    if (bgColor === \"#111111\") {\n      setBgColor(\"whitesmoke\");\n      setColor(\"#111111\");\n    } else {\n      setBgColor(\"#111111\");\n      setColor(\"whitesmoke\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav\n        toggleNav={toggleNav}\n        togglePosition={togglePosition}\n        handleToggle={handleToggle}\n        color={color}\n      />\n      <MainContent\n        toggleNav={toggleNav}\n        togglePosition={togglePosition}\n        handleToggle={handleToggleMainContent}\n        toggleDark={toggleDark}\n        color={color}\n        bgColor={bgColor}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}